# Http Server with ports
import socket, threading 

# i want to use not just one port but to give opportinity to connect different once
 #  3 LANGUAGES

request_queue_size = 5 # max 5 users
    
def handle_request(client_connection, port):
    request = client_connection.recv(1024)
    print(request.decode())
    if port == 8888:
        message = 'English. How can i help?'
    if port == 8881:
        message = 'French. Bounjour'
    if port == 8000:
        message = 'Spanish. Ca ma tase?'
    http_response = f"HTTP/1.1 200 OK\r\n\r\n{message}".encode()
    client_connection.sendall(http_response)
    client_connection.close()



def serve_forever(port):
    server_address = ('', port)
    listen_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    listen_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    listen_socket.bind(server_address)
    listen_socket.listen(request_queue_size)
    print('Serving HTTP on port {port} ...'.format(port=PORT))
    
  
    # i can implement either fork or a few ports 
    while True:
        client_connection, _ = listen_socket.accept()
        threading.Thread(
            target=handle_request,
            args=(client_connection, port),
            daemon=True
        ).start()
# allows to connect to different ports not just one 
#for port in PORT:
#    threading.Thread(target=serve_forever, args=(PORT,), daemon=True).start()


if __name__ == '__main__':
    PORT = [8888, 8881, 8000]

    for port in PORT:
        threading.Thread(target=serve_forever, args=(port,), daemon=True).start()

    input("Server running on multiple ports. Press Enter to exit...\n")
